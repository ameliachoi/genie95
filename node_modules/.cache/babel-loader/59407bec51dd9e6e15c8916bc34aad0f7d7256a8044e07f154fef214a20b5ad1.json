{"ast":null,"code":"import { nanoid } from \"nanoid\";\nimport React, { useState, useEffect, useRef, useImperativeHandle } from \"react\";\nimport { useDraggable } from \"@neodrag/react\";\nimport { Button } from \"../Button/Button.mjs\";\nimport { fixedForwardRef, Frame } from \"../Frame/Frame.mjs\";\nimport { TitleBar } from \"../TitleBar/TitleBar.mjs\";\nimport { content, modalWrapper, menuWrapper, menuItem, buttonWrapper } from \"./Modal.css.mjs\";\nimport cn from \"classnames\";\nimport { useOnClickOutside } from \"usehooks-ts\";\nimport { modals, ModalEvents } from \"../shared/events.mjs\";\nconst ModalContent = fixedForwardRef((rest, ref) => /* @__PURE__ */React.createElement(Frame, {\n  ...rest,\n  ref,\n  className: cn(content, rest.className)\n}));\nconst ModalMinimize = fixedForwardRef((props, ref) => {\n  const [id, setId] = useState(\"\");\n  useEffect(() => {\n    const handleVisibilityChange = ({\n      id: activeId\n    }) => {\n      setId(activeId);\n    };\n    modals.on(ModalEvents.ModalVisibilityChanged, handleVisibilityChange);\n    return () => {\n      modals.off(ModalEvents.ModalVisibilityChanged, handleVisibilityChange);\n    };\n  }, []);\n  const handleMinimize = () => {\n    modals.emit(ModalEvents.MinimizeModal, {\n      id\n    });\n    modals.emit(ModalEvents.ModalVisibilityChanged, {\n      id: \"no id\"\n    });\n  };\n  return /* @__PURE__ */React.createElement(TitleBar.Minimize, {\n    ...props,\n    ref,\n    onClick: handleMinimize\n  });\n});\nconst ModalRenderer = ({\n  hasWindowButton: hasButton = true,\n  buttons = [],\n  buttonsAlignment = \"flex-end\",\n  children,\n  icon,\n  menu = [],\n  title,\n  dragOptions,\n  titleBarOptions,\n  className,\n  ...rest\n}, ref) => {\n  const [id] = useState(nanoid());\n  const [menuOpened, setMenuOpened] = useState(\"\");\n  const [isActive, setIsActive] = useState(false);\n  const [isModalMinimized, setIsModalMinimized] = useState(false);\n  const draggableRef = useRef(null);\n  useDraggable(draggableRef, {\n    ...dragOptions,\n    handle: \".draggable\"\n  });\n  const menuRef = useRef(null);\n  useOnClickOutside(menuRef, () => {\n    setMenuOpened(\"\");\n  });\n  useEffect(() => {\n    modals.emit(ModalEvents.AddModal, {\n      icon,\n      title,\n      id,\n      hasButton\n    });\n    modals.on(ModalEvents.ModalVisibilityChanged, ({\n      id: activeId\n    }) => {\n      setIsActive(activeId === id);\n    });\n    modals.emit(ModalEvents.ModalVisibilityChanged, {\n      id\n    });\n    return () => {\n      modals.emit(ModalEvents.RemoveModal, {\n        id\n      });\n    };\n  }, []);\n  useEffect(() => {\n    modals.on(ModalEvents.MinimizeModal, ({\n      id: activeId\n    }) => {\n      if (activeId === id) {\n        setIsModalMinimized(true);\n      }\n    });\n    modals.on(ModalEvents.RestoreModal, ({\n      id: activeId\n    }) => {\n      if (activeId === id) {\n        setIsModalMinimized(false);\n      }\n    });\n    return () => {\n      modals.off(ModalEvents.MinimizeModal, () => {});\n      modals.off(ModalEvents.RestoreModal, () => {});\n    };\n  }, [id]);\n  useImperativeHandle(ref, () => {\n    return draggableRef.current;\n  });\n  return /* @__PURE__ */React.createElement(Frame, {\n    ...rest,\n    className: cn(modalWrapper({\n      active: isActive,\n      minimized: isModalMinimized\n    }), className),\n    role: \"dialog\",\n    \"aria-hidden\": isModalMinimized,\n    ref: draggableRef,\n    onMouseDown: () => {\n      modals.emit(ModalEvents.ModalVisibilityChanged, {\n        id\n      });\n    }\n  }, /* @__PURE__ */React.createElement(TitleBar, {\n    active: isActive,\n    icon,\n    title,\n    className: \"draggable\"\n  }, titleBarOptions && /* @__PURE__ */React.createElement(TitleBar.OptionsBox, null, titleBarOptions)), menu && menu.length > 0 && /* @__PURE__ */React.createElement(\"ul\", {\n    className: menuWrapper,\n    ref: menuRef\n  }, menu.map(({\n    name,\n    list\n  }) => {\n    const active = menuOpened === name;\n    return /* @__PURE__ */React.createElement(\"li\", {\n      key: name,\n      onMouseDown: () => setMenuOpened(name),\n      className: menuItem({\n        active\n      })\n    }, name, active && list);\n  })), children, buttons && buttons.length > 0 && /* @__PURE__ */React.createElement(Frame, {\n    className: buttonWrapper,\n    justifyContent: buttonsAlignment\n  }, buttons.map(button => /* @__PURE__ */React.createElement(Button, {\n    key: button.value,\n    onClick: button.onClick,\n    value: button.value\n  }, button.value))));\n};\nconst Modal = Object.assign(fixedForwardRef(ModalRenderer), {\n  Content: ModalContent,\n  Minimize: ModalMinimize\n});\nexport { Modal };","map":{"version":3,"names":["nanoid","React","useState","useEffect","useRef","useImperativeHandle","useDraggable","Button","fixedForwardRef","Frame","TitleBar","content","modalWrapper","menuWrapper","menuItem","buttonWrapper","cn","useOnClickOutside","modals","ModalEvents","ModalContent","rest","ref","createElement","className","ModalMinimize","props","id","setId","handleVisibilityChange","activeId","on","ModalVisibilityChanged","off","handleMinimize","emit","MinimizeModal","Minimize","onClick","ModalRenderer","hasWindowButton","hasButton","buttons","buttonsAlignment","children","icon","menu","title","dragOptions","titleBarOptions","menuOpened","setMenuOpened","isActive","setIsActive","isModalMinimized","setIsModalMinimized","draggableRef","handle","menuRef","AddModal","RemoveModal","RestoreModal","current","active","minimized","role","onMouseDown","OptionsBox","length","map","name","list","key","justifyContent","button","value","Modal","Object","assign","Content"],"sources":["/Users/jin.choi/genie95/node_modules/@react95/core/esm/Modal/Modal.mjs"],"sourcesContent":["import { nanoid } from \"nanoid\";\nimport React, { useState, useEffect, useRef, useImperativeHandle } from \"react\";\nimport { useDraggable } from \"@neodrag/react\";\nimport { Button } from \"../Button/Button.mjs\";\nimport { fixedForwardRef, Frame } from \"../Frame/Frame.mjs\";\nimport { TitleBar } from \"../TitleBar/TitleBar.mjs\";\nimport { content, modalWrapper, menuWrapper, menuItem, buttonWrapper } from \"./Modal.css.mjs\";\nimport cn from \"classnames\";\nimport { useOnClickOutside } from \"usehooks-ts\";\nimport { modals, ModalEvents } from \"../shared/events.mjs\";\nconst ModalContent = fixedForwardRef(\n  (rest, ref) => /* @__PURE__ */ React.createElement(Frame, { ...rest, ref, className: cn(content, rest.className) })\n);\nconst ModalMinimize = fixedForwardRef(\n  (props, ref) => {\n    const [id, setId] = useState(\"\");\n    useEffect(() => {\n      const handleVisibilityChange = ({ id: activeId }) => {\n        setId(activeId);\n      };\n      modals.on(ModalEvents.ModalVisibilityChanged, handleVisibilityChange);\n      return () => {\n        modals.off(ModalEvents.ModalVisibilityChanged, handleVisibilityChange);\n      };\n    }, []);\n    const handleMinimize = () => {\n      modals.emit(ModalEvents.MinimizeModal, { id });\n      modals.emit(ModalEvents.ModalVisibilityChanged, { id: \"no id\" });\n    };\n    return /* @__PURE__ */ React.createElement(TitleBar.Minimize, { ...props, ref, onClick: handleMinimize });\n  }\n);\nconst ModalRenderer = ({\n  hasWindowButton: hasButton = true,\n  buttons = [],\n  buttonsAlignment = \"flex-end\",\n  children,\n  icon,\n  menu = [],\n  title,\n  dragOptions,\n  titleBarOptions,\n  className,\n  ...rest\n}, ref) => {\n  const [id] = useState(nanoid());\n  const [menuOpened, setMenuOpened] = useState(\"\");\n  const [isActive, setIsActive] = useState(false);\n  const [isModalMinimized, setIsModalMinimized] = useState(false);\n  const draggableRef = useRef(null);\n  useDraggable(draggableRef, {\n    ...dragOptions,\n    handle: \".draggable\"\n  });\n  const menuRef = useRef(null);\n  useOnClickOutside(menuRef, () => {\n    setMenuOpened(\"\");\n  });\n  useEffect(() => {\n    modals.emit(ModalEvents.AddModal, {\n      icon,\n      title,\n      id,\n      hasButton\n    });\n    modals.on(ModalEvents.ModalVisibilityChanged, ({ id: activeId }) => {\n      setIsActive(activeId === id);\n    });\n    modals.emit(ModalEvents.ModalVisibilityChanged, { id });\n    return () => {\n      modals.emit(ModalEvents.RemoveModal, { id });\n    };\n  }, []);\n  useEffect(() => {\n    modals.on(ModalEvents.MinimizeModal, ({ id: activeId }) => {\n      if (activeId === id) {\n        setIsModalMinimized(true);\n      }\n    });\n    modals.on(ModalEvents.RestoreModal, ({ id: activeId }) => {\n      if (activeId === id) {\n        setIsModalMinimized(false);\n      }\n    });\n    return () => {\n      modals.off(ModalEvents.MinimizeModal, () => {\n      });\n      modals.off(ModalEvents.RestoreModal, () => {\n      });\n    };\n  }, [id]);\n  useImperativeHandle(ref, () => {\n    return draggableRef.current;\n  });\n  return /* @__PURE__ */ React.createElement(\n    Frame,\n    {\n      ...rest,\n      className: cn(\n        modalWrapper({ active: isActive, minimized: isModalMinimized }),\n        className\n      ),\n      role: \"dialog\",\n      \"aria-hidden\": isModalMinimized,\n      ref: draggableRef,\n      onMouseDown: () => {\n        modals.emit(ModalEvents.ModalVisibilityChanged, { id });\n      }\n    },\n    /* @__PURE__ */ React.createElement(\n      TitleBar,\n      {\n        active: isActive,\n        icon,\n        title,\n        className: \"draggable\"\n      },\n      titleBarOptions && /* @__PURE__ */ React.createElement(TitleBar.OptionsBox, null, titleBarOptions)\n    ),\n    menu && menu.length > 0 && /* @__PURE__ */ React.createElement(\"ul\", { className: menuWrapper, ref: menuRef }, menu.map(({ name, list }) => {\n      const active = menuOpened === name;\n      return /* @__PURE__ */ React.createElement(\n        \"li\",\n        {\n          key: name,\n          onMouseDown: () => setMenuOpened(name),\n          className: menuItem({ active })\n        },\n        name,\n        active && list\n      );\n    })),\n    children,\n    buttons && buttons.length > 0 && /* @__PURE__ */ React.createElement(\n      Frame,\n      {\n        className: buttonWrapper,\n        justifyContent: buttonsAlignment\n      },\n      buttons.map((button) => /* @__PURE__ */ React.createElement(\n        Button,\n        {\n          key: button.value,\n          onClick: button.onClick,\n          value: button.value\n        },\n        button.value\n      ))\n    )\n  );\n};\nconst Modal = Object.assign(\n  fixedForwardRef(ModalRenderer),\n  {\n    Content: ModalContent,\n    Minimize: ModalMinimize\n  }\n);\nexport {\n  Modal\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}