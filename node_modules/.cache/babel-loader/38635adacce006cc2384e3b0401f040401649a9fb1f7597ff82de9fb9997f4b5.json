{"ast":null,"code":"import React, { forwardRef, useState, useEffect } from \"react\";\nimport { Frame } from \"../Frame/Frame.mjs\";\nimport { Clock } from \"./Clock.mjs\";\nimport { WindowButton } from \"./WindowButton.mjs\";\nimport { Logo } from \"@react95/icons\";\nimport { truncate } from \"./TaskBar.css.mjs\";\nimport { modals, ModalEvents } from \"../shared/events.mjs\";\nconst TaskBar = forwardRef(({\n  list\n}, ref) => {\n  const [showList, toggleShowList] = useState(false);\n  const [activeStart, toggleActiveStart] = useState(false);\n  const [modalWindows, setModalWindows] = React.useState([]);\n  const [activeWindow, setActiveWindow] = useState();\n  useEffect(() => {\n    const addModal = window => {\n      setModalWindows(prevModals => [...prevModals, window]);\n    };\n    const removeModal = data => {\n      setModalWindows(prevModals => {\n        const filteredModals = prevModals.filter(modal => modal.id !== data.id);\n        const lastModal = filteredModals.at(-1);\n        if (!activeWindow && lastModal) {\n          modals.emit(ModalEvents.ModalVisibilityChanged, {\n            id: lastModal == null ? void 0 : lastModal.id\n          });\n        }\n        return filteredModals;\n      });\n    };\n    const updateVisibleModal = ({\n      id\n    }) => {\n      setActiveWindow(id);\n    };\n    modals.on(ModalEvents.AddModal, addModal);\n    modals.on(ModalEvents.RemoveModal, removeModal);\n    modals.on(ModalEvents.ModalVisibilityChanged, updateVisibleModal);\n    return () => {\n      modals.off(ModalEvents.AddModal, addModal);\n      modals.off(ModalEvents.RemoveModal, removeModal);\n      modals.off(ModalEvents.ModalVisibilityChanged, updateVisibleModal);\n    };\n  }, []);\n  return /* @__PURE__ */React.createElement(Frame, {\n    position: \"fixed\",\n    bottom: \"0px\",\n    left: \"0px\",\n    right: \"0px\",\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    h: \"28px\",\n    w: \"100%\",\n    padding: \"$2\",\n    zIndex: \"$taskbar\",\n    backgroundColor: \"$material\",\n    boxShadow: \"$out\",\n    ref\n  }, showList && /* @__PURE__ */React.createElement(Frame, {\n    position: \"absolute\",\n    bottom: \"28px\",\n    onClick: () => {\n      toggleActiveStart(false);\n      toggleShowList(false);\n    }\n  }, list), /* @__PURE__ */React.createElement(WindowButton, {\n    small: true,\n    icon: /* @__PURE__ */React.createElement(Logo, {\n      variant: \"32x32_4\"\n    }),\n    active: activeStart,\n    onClick: () => {\n      toggleActiveStart(!activeStart);\n      toggleShowList(!showList);\n    }\n  }, \"Start\"), /* @__PURE__ */React.createElement(Frame, {\n    w: \"100%\",\n    paddingLeft: \"$0\",\n    ml: \"$2\",\n    display: \"flex\"\n  }, modalWindows.map(({\n    icon,\n    title,\n    hasButton,\n    id\n  }) => hasButton && /* @__PURE__ */React.createElement(WindowButton, {\n    key: id,\n    icon,\n    active: id === activeWindow,\n    onClick: () => {\n      if (id === activeWindow) {\n        modals.emit(ModalEvents.MinimizeModal, {\n          id\n        });\n        setActiveWindow(\"Minimize\");\n      } else {\n        modals.emit(ModalEvents.RestoreModal, {\n          id\n        });\n        modals.emit(ModalEvents.ModalVisibilityChanged, {\n          id\n        });\n      }\n    },\n    small: false\n  }, /* @__PURE__ */React.createElement(\"div\", {\n    className: truncate\n  }, title)))), /* @__PURE__ */React.createElement(Clock, null));\n});\nexport { TaskBar };","map":{"version":3,"names":["React","forwardRef","useState","useEffect","Frame","Clock","WindowButton","Logo","truncate","modals","ModalEvents","TaskBar","list","ref","showList","toggleShowList","activeStart","toggleActiveStart","modalWindows","setModalWindows","activeWindow","setActiveWindow","addModal","window","prevModals","removeModal","data","filteredModals","filter","modal","id","lastModal","at","emit","ModalVisibilityChanged","updateVisibleModal","on","AddModal","RemoveModal","off","createElement","position","bottom","left","right","display","justifyContent","h","w","padding","zIndex","backgroundColor","boxShadow","onClick","small","icon","variant","active","paddingLeft","ml","map","title","hasButton","key","MinimizeModal","RestoreModal","className"],"sources":["/Users/jin.choi/genie95/node_modules/@react95/core/esm/TaskBar/TaskBar.mjs"],"sourcesContent":["import React, { forwardRef, useState, useEffect } from \"react\";\nimport { Frame } from \"../Frame/Frame.mjs\";\nimport { Clock } from \"./Clock.mjs\";\nimport { WindowButton } from \"./WindowButton.mjs\";\nimport { Logo } from \"@react95/icons\";\nimport { truncate } from \"./TaskBar.css.mjs\";\nimport { modals, ModalEvents } from \"../shared/events.mjs\";\nconst TaskBar = forwardRef(\n  ({ list }, ref) => {\n    const [showList, toggleShowList] = useState(false);\n    const [activeStart, toggleActiveStart] = useState(false);\n    const [modalWindows, setModalWindows] = React.useState([]);\n    const [activeWindow, setActiveWindow] = useState();\n    useEffect(() => {\n      const addModal = (window) => {\n        setModalWindows((prevModals) => [...prevModals, window]);\n      };\n      const removeModal = (data) => {\n        setModalWindows((prevModals) => {\n          const filteredModals = prevModals.filter(\n            (modal) => modal.id !== data.id\n          );\n          const lastModal = filteredModals.at(-1);\n          if (!activeWindow && lastModal) {\n            modals.emit(ModalEvents.ModalVisibilityChanged, {\n              id: lastModal == null ? void 0 : lastModal.id\n            });\n          }\n          return filteredModals;\n        });\n      };\n      const updateVisibleModal = ({ id }) => {\n        setActiveWindow(id);\n      };\n      modals.on(ModalEvents.AddModal, addModal);\n      modals.on(ModalEvents.RemoveModal, removeModal);\n      modals.on(ModalEvents.ModalVisibilityChanged, updateVisibleModal);\n      return () => {\n        modals.off(ModalEvents.AddModal, addModal);\n        modals.off(ModalEvents.RemoveModal, removeModal);\n        modals.off(ModalEvents.ModalVisibilityChanged, updateVisibleModal);\n      };\n    }, []);\n    return /* @__PURE__ */ React.createElement(\n      Frame,\n      {\n        position: \"fixed\",\n        bottom: \"0px\",\n        left: \"0px\",\n        right: \"0px\",\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        h: \"28px\",\n        w: \"100%\",\n        padding: \"$2\",\n        zIndex: \"$taskbar\",\n        backgroundColor: \"$material\",\n        boxShadow: \"$out\",\n        ref\n      },\n      showList && /* @__PURE__ */ React.createElement(\n        Frame,\n        {\n          position: \"absolute\",\n          bottom: \"28px\",\n          onClick: () => {\n            toggleActiveStart(false);\n            toggleShowList(false);\n          }\n        },\n        list\n      ),\n      /* @__PURE__ */ React.createElement(\n        WindowButton,\n        {\n          small: true,\n          icon: /* @__PURE__ */ React.createElement(Logo, { variant: \"32x32_4\" }),\n          active: activeStart,\n          onClick: () => {\n            toggleActiveStart(!activeStart);\n            toggleShowList(!showList);\n          }\n        },\n        \"Start\"\n      ),\n      /* @__PURE__ */ React.createElement(Frame, { w: \"100%\", paddingLeft: \"$0\", ml: \"$2\", display: \"flex\" }, modalWindows.map(\n        ({ icon, title, hasButton, id }) => hasButton && /* @__PURE__ */ React.createElement(\n          WindowButton,\n          {\n            key: id,\n            icon,\n            active: id === activeWindow,\n            onClick: () => {\n              if (id === activeWindow) {\n                modals.emit(ModalEvents.MinimizeModal, { id });\n                setActiveWindow(\"Minimize\");\n              } else {\n                modals.emit(ModalEvents.RestoreModal, { id });\n                modals.emit(ModalEvents.ModalVisibilityChanged, { id });\n              }\n            },\n            small: false\n          },\n          /* @__PURE__ */ React.createElement(\"div\", { className: truncate }, title)\n        )\n      )),\n      /* @__PURE__ */ React.createElement(Clock, null)\n    );\n  }\n);\nexport {\n  TaskBar\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}